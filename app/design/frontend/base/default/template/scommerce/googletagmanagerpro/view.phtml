<?php
/**
 * @var $this Scommerce_GoogleTagManagerPro_Block_View
 */
?>
<?php
$helper = Mage::helper('scommerce_googletagmanagerpro');
if ($helper->isGA4Enabled()):
    $useGa4 = true;
else:
    $useGa4 = false;
endif;
if ($helper->isUAEnabled()):
    $useUA = true;
else:
    $useUA = false;
endif;
if (!$helper->isEnabled() || !$helper->isEEEnabled()) return;

$_product = $this->getProduct();

$_category = Mage::registry('current_category');

$cookie = Mage::getSingleton('core/cookie');
$_categoryName = str_replace('"','',$cookie->get("googlecategory"));
$_listName = str_replace('"','',$cookie->get("productlist"));

if ($_category && (strlen($_categoryName)==0)){
    $_categoryName = $_category->getName();
}
elseif ((strlen($_categoryName)==0)){
    $_categoryName = $helper->getProductCategoryName($_product);
}

if (strlen($_listName)==0){
	$_listName = "Category - ". $_categoryName;
}

$_relatedProductIds = $_product->getRelatedProductIds();

if (count($_relatedProductIds)){
    $_relatedProducts =  $this->getProducts($_relatedProductIds);

    $_relatedProductUrls = array();
    $_relatedProductItems = array();
    $_relatedImpressionList = 'Related Product';
    $_relatedClickLabel = 'Related';
    $_loop = 1;

    foreach ($_relatedProducts as $_relatedProduct){
        $_relatedProductUrls[] = $_relatedProduct->getProductUrl();
        //$_relatedProductUrls[] = substr($_relatedProductUrl,0, strpos($_relatedProductUrl, '?'));

        $_relatedProductItems[] = array(
            'id' => $this->jsQuoteEscape($_relatedProduct->getSku()),
            'name'  => $this->jsQuoteEscape($_relatedProduct->getName()),
            'category' => $this->jsQuoteEscape($helper->getProductCategoryName($_relatedProduct)),
            'brand' => $this->jsQuoteEscape($helper->getBrand($_relatedProduct)),
			'price' => $this->helper('core')->currency($helper->getProductPrice($_relatedProduct),false,false),
            'list'  => $_relatedImpressionList,
            'position' => $_loop
        );

        $_loop++;
    }

    $_JsRelatedProducts = json_encode($_relatedProductItems);
    $_JsRelatedProductUrls = json_encode($_relatedProductUrls);
}

$_upsellProductIds = $_product->getUpSellProductIds();

if (count($_upsellProductIds)){
    $_upsellProducts = $this->getProducts($_upsellProductIds);

    $_upsellProductUrls = array();
    $_upsellProductItems = array();
    $_upsellImpressionList = 'Upsell Product';
    $_upsellClickLabel = 'Upsell';
    $_loop = 1;

    foreach ($_upsellProducts as $_upsellProduct) {
        $_upsellProductUrls[] = $_upsellProduct->getProductUrl();
        //$_upsellProductUrls[] = substr($_upsellProductUrl, 0, strpos($_upsellProductUrl, '?'));

        $_upsellProductItems[] = array(
            'id' => $this->jsQuoteEscape($_upsellProduct->getSku()),
            'name' => $this->jsQuoteEscape($_upsellProduct->getName()),
            'category' => $this->jsQuoteEscape($helper->getProductCategoryName($_upsellProduct)),
            'brand' => $this->jsQuoteEscape($helper->getBrand($_upsellProduct)),
			'price' => $this->helper('core')->currency($helper->getProductPrice($_upsellProduct),false,false),
            'list' => $_upsellImpressionList,
            'position' => $_loop
        );

        $_loop++;
    }

    $_JsUpsellProducts = json_encode($_upsellProductItems);
    $_JsUpsellProductUrls = json_encode($_upsellProductUrls);
}
?>
<script type='text/javascript'>
        //<![CDATA[
<?php if (count($_relatedProductIds)) { ?>
        var jsRelatedProducts = <?php echo $_JsRelatedProducts ?>;
        var jsRelatedProductUrls = <?php echo $_JsRelatedProductUrls ?>;
        var jsRelatedClickLabel = '<?php echo $_relatedClickLabel ?>';

        window.dataLayer = window.dataLayer || [];
        <?php if ($useUA): ?>
		dataLayer.push({
		  'event': 'related_product',						  
		  'ecommerce': {
			'currencyCode': '<?php echo Mage::app()->getStore()->getCurrentCurrencyCode();?>',                       // Local currency is optional.
			'impressions': [
			<?php foreach ($_relatedProductItems as $_relatedProduct):?>
			{
			   'name': '<?php echo $_relatedProduct['name']?>',
			   'id': '<?php echo $_relatedProduct['id']?>',
			   'price': '<?php echo $_relatedProduct['price']?>',
			   'brand': '<?php echo $_relatedProduct['brand']?>',
			   'category': '<?php echo $_relatedProduct['category']?>',
			   'list': '<?php echo $_relatedProduct['list']?>',
			   'position': '<?php echo $_relatedProduct['position']?>'
				<?php if ($_relatedProduct['position']==count($_relatedProductItems)):?>
			}]
				<?php else:?>
			},
				<?php endif;?>
			<?php endforeach;?>
			}
		});
        <?php endif; ?>
        <?php if ($useGa4): ?>
        dataLayer.push({ ecommerce: null });
        var relatedItems = [];
        for (let i = 0; i < jsRelatedProducts.length; i++) {
            relatedItems.push({
                item_name: jsRelatedProducts[i].name,
                item_id: jsRelatedProducts[i].id,
                price: jsRelatedProducts[i].price,
                item_brand: jsRelatedProducts[i].brand,
                item_list_name: jsRelatedProducts[i].list,
                item_list_id: getListId(jsRelatedProducts[i].list),
                affiliation: "<?php echo $helper->getAffiliation(); ?>",
                currency: "<?php echo $helper->getCurrency(); ?>",
                item_category: jsRelatedProducts[i].category,
                index: jsRelatedProducts[i].position,
                quantity: jsRelatedProducts[i].qty
            });
        }
        dataLayer.push({
            event: "view_item_list",
            ecommerce: {
                items: relatedItems
            }
        });
        <?php endif; ?>
<?php } ?>
<?php if (count($_upsellProductIds)) { ?>

        var jsUpsellProducts = <?php echo $_JsUpsellProducts ?>;
        var jsUpsellProductUrls = <?php echo $_JsUpsellProductUrls ?>;
        var jsUpsellClickLabel = '<?php echo $_upsellClickLabel ?>';

        window.dataLayer = window.dataLayer || [];
        <?php if ($useUA): ?>
        dataLayer.push({ ecommerce: null });
		dataLayer.push({
		  'event': 'upsell_product',					  
		  'ecommerce': {
			'currencyCode': '<?php echo Mage::app()->getStore()->getCurrentCurrencyCode();?>',                       // Local currency is optional.
			'impressions': [
			<?php foreach ($_upsellProductItems as $_upsellProductItem):?>
			{
			   'name': '<?php echo $_upsellProductItem['name']?>',
			   'id': '<?php echo $_upsellProductItem['id']?>',
			   'price': '<?php echo $_upsellProductItem['price']?>',
			   'brand': '<?php echo $_upsellProductItem['brand']?>',
			   'category': '<?php echo $_upsellProductItem['category']?>',
			   'list': '<?php echo $_upsellProductItem['list']?>',
			   'position': '<?php echo $_upsellProductItem['position']?>'
				<?php if ($_upsellProductItem['position']==count($_upsellProductItems)):?>
			}]
				<?php else:?>
			},
				<?php endif;?>
			<?php endforeach;?>
			}
		});
        <?php endif; ?>
        <?php if ($useGa4): ?>
        dataLayer.push({ ecommerce: null });
        var upsellItems = [];
        for (let i = 0; i < jsUpsellProducts.length; i++) {
            upsellItems.push({
                item_name: jsUpsellProducts[i].name,
                item_id: jsUpsellProducts[i].id,
                price: jsUpsellProducts[i].price,
                item_brand: jsUpsellProducts[i].brand,
                item_list_name: jsUpsellProducts[i].list,
                item_list_id: getListId(jsUpsellProducts[i].list),
                affiliation: "<?php echo $helper->getAffiliation(); ?>",
                currency: "<?php echo $helper->getCurrency(); ?>",
                item_category: jsUpsellProducts[i].category,
                index: jsUpsellProducts[i].position,
                quantity: jsUpsellProducts[i].qty
            });
        }
        dataLayer.push({
            event: "view_item_list",
            ecommerce: {
                items: upsellItems
            }
        });
        <?php endif; ?>

<?php } ?>

	window.dataLayer = window.dataLayer || [];
    <?php if ($useUA): ?>
    dataLayer.push({
          'event': 'view_item',
	  'ecommerce': {
		'detail': {
		  'actionField': {'list': '<?php echo $this->jsQuoteEscape($_listName) ?>'},    // 'detail' actions have an optional list property.
		  'products': [{
			'name': '<?php echo $this->jsQuoteEscape($_product->getName()) ?>',         // Name or ID is required.
			'id': '<?php echo $this->jsQuoteEscape($_product->getSku()) ?>',
			'price': <?php echo $this->helper('core')->currency($helper->getProductPrice($_product),false,false)?>,
			'brand': '<?php echo $this->jsQuoteEscape($helper->getBrand($_product)) ?>',
			'category': '<?php echo $this->jsQuoteEscape($_categoryName) ?>',
		   }]
		 }
	   }
	});
    <?php endif; ?>
    <?php if ($useGa4): ?>
    dataLayer.push({ ecommerce: null });
    let items = {
        item_name: '<?php echo $this->jsQuoteEscape($_product->getName()) ?>',
        item_id: '<?php echo $this->jsQuoteEscape($_product->getSku()) ?>',
        price: formatPrice(<?php echo $this->helper('core')->currency($helper->getProductPrice($_product),false,false)?>, false),
        item_brand: '<?php echo $this->jsQuoteEscape($helper->getBrand($_product)) ?>',
        item_list_name: '<?php echo $this->jsQuoteEscape($_listName) ?>',
        item_list_id: getListId('<?php echo $this->jsQuoteEscape($_listName) ?>'),
        affiliation: "<?php echo $helper->getAffiliation(); ?>",
        currency: "<?php echo $helper->getCurrency(); ?>"
    };
    let categories = '<?php echo $this->jsQuoteEscape($_categoryName) ?>'.split('->');
    items['item_category'] = categories[0];
    for (let j = 1; j < categories.length; j++) {
        key = 'item_category' + (j + 1);
        items[key] = categories[j];
    }
    let content = {
        'event': 'view_item',
        'ecommerce': {
            'items': [items]
        }
    };
    dataLayer.push(content);
    <?php endif; ?>


<?php if (count($_relatedProductIds) || count($_upsellProductIds)) { ?>
		gtmPro(document).ready(function() {
			gtmPro(document).on('click', 'a:not([href$="\\.jpg"])', function(e){
				var product, index;
				var href = gtmPro(this).attr('href');
				
				
				if ((typeof jsRelatedProductUrls == 'undefined') || jsRelatedProductUrls == undefined){
					index = -1;
				}
				else{
					index = jsRelatedProductUrls.indexOf(href);
				}
				
				if (index != -1 && window.ga && ga.loaded){
					e.preventDefault(e);
					product = jsRelatedProducts[index];
					Mage.Cookies.set('productlist', product.list);
                    <?php if ($useUA): ?>
					dataLayer.push({
						'event': 'productClick',
						'ecommerce': {
						  'click': {
							'actionField': {'list': product.list},      // Optional list property.
							'products': [{
							  'name': product.name,                      // Name or ID is required.
							  'id': product.id,
							  'price': product.price,
							  'brand': product.brand,
							  'category': product.category,
							  'position': product.position
							 }]
						   }
						 },
						 'eventCallback': function() {
						   if (!(e.ctrlKey || e.which==2)){
								document.location = href;
							}
						 }
					});
                    <?php endif; ?>
                    <?php if ($useGa4): ?>
                    dataLayer.push({ ecommerce: null });
                    dataLayer.push({
                        'event': 'select_item',
                        'ecommerce':{
                            'items': [{
                                'item_name': product.name,
                                'item_id': product.id,
                                'price': formatPrice(product.price, false),
                                'item_brand': product.brand,
                                'item_list_name': product.list,
                                'item_list_id': getListId(product.list),
                                'index': product.position,
                                'item_category': product.category,
                                'affiliation': "<?php echo $helper->getAffiliation(); ?>",
                                'currency': "<?php echo $helper->getCurrency(); ?>"
                            }]
                        }
                    });
                    <?php endif; ?>
				}
				else{
					document.location = href;
				}
				
				if ((typeof jsUpsellProductUrls == 'undefined') || jsUpsellProductUrls == undefined){
					index = -1;
				}
				else{
					index = jsUpsellProductUrls.indexOf(href);
				}

				if (index != -1 && window.ga && ga.loaded){
				    e.preventDefault(e);
					product = jsUpsellProducts[index];
					Mage.Cookies.set('productlist', product.list);
                    <?php if ($useUA): ?>
                    dataLayer.push({ ecommerce: null });
					dataLayer.push({
						'event': 'productClick',
						'ecommerce': {
						  'click': {
							'actionField': {'list': product.list},      // Optional list property.
							'products': [{
							  'name': product.name,                      // Name or ID is required.
							  'id': product.id,
							  'price': product.price,
							  'brand': product.brand,
							  'category': product.category,
							  'position': product.position
							 }]
						   }
						 },
						 'eventCallback': function() {
						   if (!(e.ctrlKey || e.which==2)){
								document.location = href;
							}
						 }
					});
                    <?php endif; ?>
                    <?php if ($useGa4): ?>
                    dataLayer.push({ ecommerce: null });
                    dataLayer.push({
                        'event': 'select_item',
                        'ecommerce':{
                            'items': [{
                                'item_name': product.name,
                                'item_id': product.id,
                                'price': formatPrice(product.price, false),
                                'item_brand': product.brand,
                                'item_list_name': product.list,
                                'item_list_id': getListId(product.list),
                                'index': product.position,
                                'item_category': product.category,
                                'affiliation': "<?php echo $helper->getAffiliation(); ?>",
                                'currency': "<?php echo $helper->getCurrency(); ?>"
                            }]
                        }
                    });
                    <?php endif; ?>
				}
				else{
					document.location = href;
				}
			});
		});
<?php } ?>
        function getListId(listName) {
            if (listName !== undefined && listName !== "undefined")
                return listName.trim().replace(/[^\w ]/g,' ').replace(/\s\s+/g, ' ').replace(/\s/g, '_').toLowerCase();
        }
        function formatPrice(priceValue, asString) {
            let val = priceValue;
            if (typeof val === 'string')
            {
                val = val.replace(/,/g, '');
            }
            if (asString === undefined || asString !== true) {
                return parseFloat(parseFloat(val).toFixed(2));
            }
            return parseFloat(val).toFixed(2);
        }
        //]]>
</script>
