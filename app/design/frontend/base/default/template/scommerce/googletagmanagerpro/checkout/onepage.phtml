<?php
/**
 * @var $this Scommerce_GoogleTagManagerPro_Block_Checkout_Onepage
 */
?>
<?php
$helper = Mage::helper('scommerce_googletagmanagerpro');
if (!$helper->isEnabled() || !$helper->isEEEnabled()) return; ?>
<?php $cartItems = $this->getCartItems(); ?>
<script type='text/javascript'>
//<![CDATA[
/**
 * Called when the user begins the checkout process.
 */
gtmPro(document).ready(function($) {
	Billing.prototype.save = function()
    {
		var checkoutMethod = '';
		if (checkout.method.length>0){
			checkoutMethod = checkout.method;
		}
		else{
			checkoutMethod = 'Registered User';
		}
        if (checkout.loadWaiting!=false) return;

        var validator = new Validation(this.form);
        if (validator.validate()) {
            checkout.setLoadWaiting('billing');
			//	alert('billing');
			<?php $intCtr=0;?>
			 dataLayer.push({
				'event': 'checkout',
				'ecommerce': {
				  'checkout': {
					'actionField': {'step': 1, 'option': gtmPro('input[name="billing[use_for_shipping]"]:checked').attr('title') + ' - ' + checkoutMethod},
					'products': [
					  <?php foreach($cartItems as $_quoteItem) : ?>
							<?php $intCtr++;?>
							<?php if ($_quoteItem->getParentItemId()) continue; ?>
					{
					  'name': '<?php echo $this->jsQuoteEscape($_quoteItem->getName()) ?>',
					  'id': '<?php echo $this->jsQuoteEscape($_quoteItem->getSku()) ?>',
					  'price': '<?php echo $_quoteItem->getBasePrice() ?>',
					  'brand': '<?php echo $this->jsQuoteEscape($helper->getBrand($_quoteItem->getProduct())) ?>',
					  'category': '<?php echo $this->jsQuoteEscape($helper->getQuoteCategoryName($_quoteItem)) ?>',
					  'quantity': '<?php echo $_quoteItem->getQty() ?>'
					  <?php if ($intCtr==count($cartItems)):?>
}]
					  <?php else:?>
},
					  <?php endif;?>
					  <?php endforeach; ?>
				   
				 }
			   },
			   'eventCallback': function() {
				  //document.location = 'checkout.html';
			   }
			  });
           
            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method: 'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    };
	
    Shipping.prototype.save = function(){
        if (checkout.loadWaiting!=false) return;
        var validator = new Validation(this.form);
        if (validator.validate()) {
            checkout.setLoadWaiting('shipping');
			<?php $intCtr=0;?>
			dataLayer.push({
				'event': 'checkoutOption',
				'ecommerce': {
				  'checkout_option': {
					'actionField': {'step': 2, 'option': (gtmPro('input[name="shipping[same_as_billing]"]').is(':checked')) ? 'Use Billing Address' : 'Use Different Shipping Address'}
				 }
				},
				'eventCallback': function() {
				  //document.location = 'checkout.html';
				}
			});

            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method:'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    };
    
    ShippingMethod.prototype.save = function () {
        if (checkout.loadWaiting != false) return;

        if (this.validate()) {
            checkout.setLoadWaiting('shipping-method');
			<?php $intCtr=0;?>
			dataLayer.push({
				'event': 'checkoutOption',
				'ecommerce': {
				  'checkout_option': {
					'actionField': {'step': 3, 'option': gtmPro('input[name=shipping_method]:checked').val()}
				 }
				},
				'eventCallback': function() {
				  //document.location = 'checkout.html';
				}
			});

            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method: 'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    };
    
    Payment.prototype.save = function () {
        if (checkout.loadWaiting != false) return;

        var validator = new Validation(this.form);
        if (this.validate() && validator.validate()) {
            checkout.setLoadWaiting('payment');
			<?php $intCtr=0;?>
			dataLayer.push({
				'event': 'checkoutOption',
				'ecommerce': {
				  'checkout_option': {
					'actionField': {'step': 4, 'option': gtmPro('input[name="payment[method]"]:checked').val()}
				 }
				},
				'eventCallback': function() {
				  //document.location = 'checkout.html';
				}
			});
			
            var request = new Ajax.Request(
                this.saveUrl,
                {
                    method: 'post',
                    onComplete: this.onComplete,
                    onSuccess: this.onSave,
                    onFailure: checkout.ajaxFailure.bind(checkout),
                    parameters: Form.serialize(this.form)
                }
            );
        }
    };
	
    Review.prototype.save = function()
    {
		if (checkout.loadWaiting!=false) return;
        checkout.setLoadWaiting('review');
		<?php $intCtr=0;?>
        var params = Form.serialize(payment.form);
        if (this.agreementsForm) {
            params += '&'+Form.serialize(this.agreementsForm);
        }
        params.save = true;
		
		dataLayer.push({
			'event': 'checkoutOption',
			'ecommerce': {
			  'checkout_option': {
				'actionField': {'step': 5, 'option': 'Review Order'}
			 }
			},
			'eventCallback': function() {
			  //document.location = 'checkout.html';
			}
		});
		
        var request = new Ajax.Request(
            this.saveUrl,
            {
                method:'post',
                parameters:params,
                onComplete: this.onComplete,
                onSuccess: this.onSave,
                onFailure: checkout.ajaxFailure.bind(checkout)
            }
        );
    };
});
//]]>
</script>